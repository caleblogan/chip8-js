import { Chip8 } from "chip8-emulator/dest/chip8"
import { EmulatorScreen } from "chip8-emulator/dest/screen"
import "./App.css"

/**
 * [*] setup client build
 * [*] load rom
 * [*] run in browser console
 * [*] draw to screen
 * [ ] input handling
 * [ ] sound
 */

const rom = new Uint8Array([
  0x00, 0xE0, 0xA2, 0x2A, 0x60, 0x0C, 0x61, 0x08, 0xD0, 0x1F, 0x70, 0x09, 0xA2, 0x39, 0xD0, 0x1F, 0xA2, 0x48, 0x70, 0x08, 0xD0, 0x1F, 0x70, 0x04, 0xA2, 0x57, 0xD0, 0x1F, 0x70, 0x08, 0xA2, 0x66, 0xD0, 0x1F, 0x70, 0x08, 0xA2, 0x75, 0xD0, 0x1F, 0x12, 0x28, 0xFF, 0x00, 0xFF, 0x00, 0x3C, 0x00, 0x3C, 0x00, 0x3C, 0x00, 0x3C, 0x00, 0xFF, 0x00, 0xFF, 0xFF, 0x00, 0xFF, 0x00, 0x38, 0x00, 0x3F, 0x00, 0x3F, 0x00, 0x38, 0x00, 0xFF, 0x00, 0xFF, 0x80, 0x00, 0xE0, 0x00, 0xE0, 0x00, 0x80, 0x00, 0x80, 0x00, 0xE0, 0x00, 0xE0, 0x00, 0x80, 0xF8, 0x00, 0xFC, 0x00, 0x3E, 0x00, 0x3F, 0x00, 0x3B, 0x00, 0x39, 0x00, 0xF8, 0x00, 0xF8, 0x03, 0x00, 0x07, 0x00, 0x0F, 0x00, 0xBF, 0x00, 0xFB, 0x00, 0xF3, 0x00, 0xE3, 0x00, 0x43, 0xE0, 0x00, 0xE0, 0x00, 0x80, 0x00, 0x80, 0x00, 0x80, 0x00, 0x80, 0x00, 0xE0, 0x00, 0xE0
])

const screen = new EmulatorScreen()
const chip = new Chip8(screen)
chip.loadProgram(rom)
console.log(chip)

const CYCLE_RATE = 1000 / 10
console.log("SETTING UP")
setInterval(() => {
  chip.cycle()
  draw()
}, CYCLE_RATE)

function draw() {
  const canvas = document.getElementById("screen") as HTMLCanvasElement | null;
  if (canvas === null) {
    console.warn("Canvas not found")
    return
  }
  const ctx = canvas.getContext("2d");
  if (ctx === null) {
    console.warn("Context not found")
    return
  }

  ctx.clearRect(0, 0, canvas.width, canvas.height);

  ctx.moveTo(0, 0);
  ctx.beginPath();
  for (let i = 0; i < screen.buffer.length; i++) {
    ctx.fillStyle = screen.buffer[i] ? "#008f00" : "white"
    const x = (i % 64) * pixelWidth
    const y = Math.floor(i / 64) * pixelWidth
    ctx.fillRect(x, y, pixelWidth, pixelWidth);
  }
  ctx.closePath();
}

const pixelWidth = 12
function App() {
  return (
    <div className="container">
      <canvas id="screen" width={64 * pixelWidth} height={32 * pixelWidth} />
    </div>
  )
}

export default App
